---
import FormattedDate from '../components/FormattedDate.astro';
import BackToPrev from '../components/BackToPrev.astro';
import Base from '../layouts/Base.astro';
import { readingTime } from "../lib/utils";

const { data, body } = Astro.props;
const { title, description, pubDate, ogImage } = data;
let canonicalURL = new URL(Astro.url.pathname, Astro.site).href;
---

<Base title={title} description={description} ogImage={ogImage}>
  <article class="content">
    <div>
      <BackToPrev href="/">
        Back
      </BackToPrev>
      <div class="space-y-1 my-10">
        <h1 class="my-0!" transition:name={`title-${title}`}>
          {title}
        </h1>
        <p class="my-1!">
          {description}
        </p>
        <div class="flex items-center flex-wrap gap-3 mt-2 opacity-75">
          <p class="flex items-center gap-2 my-0">
            <svg xmlns="http://www.w3.org/2000/svg" class="inline w-[1em] h-[1em]" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-icon lucide-calendar"><path d="M8 2v4"/><path d="M16 2v4"/><rect width="18" height="18" x="3" y="4" rx="2"/><path d="M3 10h18"/></svg>
            <FormattedDate date={pubDate} name={`date-${title}`} />
          </p>
          <p class="flex items-center gap-2 my-0">
            <svg xmlns="http://www.w3.org/2000/svg" class="inline w-[1em] h-[1em]" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-clock3-icon lucide-clock-3"><circle cx="12" cy="12" r="10"/><polyline points="12 6 12 12 16.5 12"/></svg>
            <span>{readingTime(body)}</span>
          </p>
        </div>
      </div>
      <slot />
      <br />
      <div class="border-t py-6">
        <p>If you like this kind of content you can help me
        <a
          target="_blank"
          href={`https://x.com/intent/tweet?text=${title + '%0Aby @hudamnhd'}&url=${canonicalURL}`}
        >
          sharing this post on X</a
        >. Thank you!</p>
      </div>
    </div>
  </article>
  <script is:inline>
    function init() {
      const scrollBtn = document.getElementById("to-top-btn");
      if (scrollBtn) {
        scrollBtn.addEventListener("click", () => {
            document.documentElement.scrollTo({ behavior: "smooth", top: 0 });
        });
      }

      async function copyCode(block, button) {
        const code = block.querySelector("code");
        const text = code?.innerText || "";

        try {
          await navigator.clipboard.writeText(text);

          // Visual feedback that the task is completed
          button.innerHTML = checkMarkImg;

          setTimeout(() => {
            button.innerHTML = copyImg;
          }, 700);
        } catch (error) {
          console.error("Failed to copy code: ", error);
        }
      }

      const copyImg = `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-copy-icon lucide-copy"><rect width="14" height="14" x="8" y="8" rx="2" ry="2"/><path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2"/></svg>`
      const checkMarkImg = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check-check-icon lucide-check-check"><path d="M18 6 7 17l-5-5"/><path d="m22 10-7.5 7.5L13 16"/></svg>`
      const preBlocks = Array.from(document.querySelectorAll("pre"));

      for (const preBlock of preBlocks) {
        preBlock.style.position = "relative";

        renderCopyBtn(preBlock);
      }

      function renderCopyBtn(preBlock) {
        const copyButton = document.createElement("button");

        copyButton.className = "copy-code";
        copyButton.setAttribute("aria-label", "Copy code to clipboard");
        copyButton.setAttribute("title", "Copy code to clipboard");
        copyButton.innerHTML = copyImg;

        preBlock.appendChild(copyButton);

        copyButton.addEventListener("click", async () => {
          await copyCode(preBlock, copyButton);
        });
      }
    }

    document.addEventListener("astro:after-swap", init);
    init();
  </script>
</Base>


